generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

// auto generate
model Ledger {
  id          String @id
  description String @unique

  JournalEntry JournalEntry[]

  AccountBalance AccountBalance[]
  dailyBalance   DailyBalance[]
}

// auto generate
model User {
  id                Int               @id @default(autoincrement())
  email             String            @unique
  name              String?
  tokenTransactions TokenTrasaction[]
  // The following field is not saved in the Database. For info https://www.prisma.io/docs/concepts/components/prisma-schema/relations
  // UserTokenTransactions JournalEntry[]
  // BookEntry             BookEntry[]
  // DollarBalance         DollarBalance[]
  // DailyBalance          DailyBalance[]
  JournalEntry      JournalEntry[]
  AccountBalance    AccountBalance[]
  dailyBalance      DailyBalance[]
}

model TokenTrasaction {
  id           Int            @id @default(autoincrement())
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  description  String
  date         DateTime
  exchangeRate Decimal?       @db.Decimal
  JournalEntry JournalEntry[]
}

// model JournalEntryType {
//   id         String @id
// }

// auto generate
model Account {
  id          String
  description String
  type        String

  JournalEntry   JournalEntry[]
  AccountBalance AccountBalance[]
  dailyBalance   DailyBalance[]
  @@unique([id])
}

model JournalEntry {
  id                 Int             @id @default(autoincrement())
  ledger             Ledger          @relation(fields: [ledgerId], references: [id])
  ledgerId           String
  user               User            @relation(fields: [userId], references: [id])
  userId             Int
  tokenTransaction   TokenTrasaction @relation(fields: [tokenTransactionId], references: [id])
  tokenTransactionId Int
  account            Account         @relation(fields: [accountId], references: [id])
  accountId          String
  // https://prismadb.readthedocs.io/en/latest/data-types/, https://www.prisma.io/dataguide/postgresql/introduction-to-data-types#other-useful-types
  // https://stackoverflow.com/questions/33730538/difference-between-decimal-and-numeric-datatype-in-psql
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#model-field-scalar-types
  debit              Decimal?        @default(0) @db.Decimal
  credit             Decimal?        @default(0) @db.Decimal
  date               DateTime

}

model AccountBalance {
  id        Int      @id @default(autoincrement())
  ledger    Ledger   @relation(fields: [ledgerId], references: [id])
  ledgerId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  debit     Decimal? @default(0) @db.Decimal
  credit    Decimal? @default(0) @db.Decimal

  @@unique([ledgerId, userId, accountId])
}

model DailyBalance {
  dailyId   Int
  ledger    Ledger   @relation(fields: [ledgerId], references: [id])
  ledgerId  String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String
  debit     Decimal? @default(0) @db.Decimal
  credit    Decimal? @default(0) @db.Decimal

  @@unique([dailyId, ledgerId, userId, accountId])
}
